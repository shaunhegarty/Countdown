
package learn;

import static learn.LettersGame.*;



/**
 *
 * @author Shaun
 */
public class CountdownLettersGame extends javax.swing.JFrame {

    /**
     * Creates new form CelciusConverterGUI
     */
    int count = 0;
    
    public CountdownLettersGame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generateLettersButton = new javax.swing.JButton();
        wordEntryField = new javax.swing.JTextField();
        endGameButton = new javax.swing.JButton();
        finalTextField = new javax.swing.JScrollPane();
        finalText = new javax.swing.JTextArea();
        lettersMix = new javax.swing.JTextField();
        ConundrumButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        scoreLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LettersGame");
        setMaximumSize(new java.awt.Dimension(640, 480));
        setMinimumSize(new java.awt.Dimension(320, 240));
        setPreferredSize(new java.awt.Dimension(320, 320));

        generateLettersButton.setText("Generate Letters");
        generateLettersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateLettersButtonActionPerformed(evt);
            }
        });

        wordEntryField.setText("Enter a valid word");
        wordEntryField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wordEntryFieldMouseClicked(evt);
            }
        });

        endGameButton.setText("Accept");
        endGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endGameButtonActionPerformed(evt);
            }
        });

        finalText.setEditable(false);
        finalText.setColumns(20);
        finalText.setLineWrap(true);
        finalText.setRows(5);
        finalTextField.setViewportView(finalText);

        lettersMix.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lettersMix.setText("LETTERS");

        ConundrumButton.setText("Solve a Conundrum");
        ConundrumButton.setActionCommand("Play a Conundrum Round");
        ConundrumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConundrumButtonActionPerformed(evt);
            }
        });

        titleLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("LETTERS GAME");

        scoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        scoreLabel.setText("Score: " + LettersGame.score);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ConundrumButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(finalTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(lettersMix, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wordEntryField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(endGameButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(generateLettersButton, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                            .addComponent(scoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(scoreLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lettersMix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generateLettersButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wordEntryField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(endGameButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(finalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ConundrumButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateLettersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateLettersButtonActionPerformed
       lettersMix.setText(LettersGame.getQuickLettersGame(getVowelsList(), getConsonantsList()).toUpperCase());
       //lettersMix.setText(LettersGame.generateConundrum().toUpperCase());
    }//GEN-LAST:event_generateLettersButtonActionPerformed

    private void endGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endGameButtonActionPerformed
        String mix = lettersMix.getText().toLowerCase();
        String text = new String();
        LettersGame.setup();
        try
        {                   
            
            String word = wordEntryField.getText();
            if(isAWord(word) && isValidCountdown(word, mix))
            {
                text = "\nWell done, you got " + word.length() + " points!";
                LettersGame.score = LettersGame.score + word.length();
            } else if (!isAWord(word) && isValidCountdown(word, mix))
            {
                text = "\nThat word is not in the dictionary!";
                LettersGame.score = 0;
            } else {
                text = "\nThat is not a valid word.";
                LettersGame.score = 0;
            }
            
            
        } catch (IndexOutOfBoundsException y)
        {
            text = "You didn't enter a word. ";
            LettersGame.score = 0;
        }
        
        finalText.setText(text + "\nThe best word(s) available were: " + getBestWords(mix));
        lettersMix.setText(LettersGame.getQuickLettersGame(getVowelsList(), getConsonantsList()).toUpperCase());
        scoreLabel.setText("Score: " + LettersGame.score);
    }//GEN-LAST:event_endGameButtonActionPerformed

    private void wordEntryFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wordEntryFieldMouseClicked
        if (count < 1) {
            wordEntryField.setText("");
        }
        count++;
    }//GEN-LAST:event_wordEntryFieldMouseClicked

    private void ConundrumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConundrumButtonActionPerformed
        new Conundrum().setVisible(true);
        setVisible(false);
        dispose();
    }//GEN-LAST:event_ConundrumButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CountdownLettersGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CountdownLettersGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CountdownLettersGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CountdownLettersGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CountdownLettersGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ConundrumButton;
    private javax.swing.JButton endGameButton;
    private javax.swing.JTextArea finalText;
    private javax.swing.JScrollPane finalTextField;
    private javax.swing.JButton generateLettersButton;
    private javax.swing.JTextField lettersMix;
    private javax.swing.JLabel scoreLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField wordEntryField;
    // End of variables declaration//GEN-END:variables
}
